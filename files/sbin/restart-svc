#!/bin/sh

# Copyright (c) 2014 Simon Deziel <simon.deziel@gmail.com>

# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.

# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

# Explicitly set the PATH to that of ENV_SUPATH in /etc/login.defs and unset
# various other variables. For details, see:
# https://wiki.ubuntu.com/SecurityTeam/AppArmorPolicyReview#Execute_rules
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export ENV=
export CDPATH=

CHECK_DELETED_LIBS="$(/usr/bin/which check-deleted-libs 2>/dev/null)"

# Report an error and exit
perror () {
  echo "Error: $1" >&2
  exit 1
}

# Check if everything is there to be used
[ -n "$CHECK_DELETED_LIBS" ] || p_error "check-deleted-libs binary is missing"
[ -x "$CHECK_DELETED_LIBS" ] || p_error "$CHECK_DELETED_LIBS not executable"

if [ ! -r /etc/os-release ]; then
  perror "Unable to read /etc/os-release, cannot identify the OS version"
else
  . /etc/os-release
  [ -z "$NAME" -o "$NAME" != "Ubuntu" ] && perror "This script only supports Ubuntu (not $NAME)"
fi

service_action () {
  local svc_name="$1"
  local svc_action="$2"

  # Make sure the init script exists and the service was started by it
  if [ -x "/etc/init.d/$svc_name" ]; then
    service "$svc_name" status >/dev/null && service "$svc_name" "$svc_action" >/dev/null
  fi
}

restart_dbus () {
   # Restarting dbus while lightdm is running breaks the graphical session
   status lightdm 2>/dev/null | grep -qF running || restart_upstart dbus
}

send_signal () {
  local signal="$1"
  local proc_name="$2"

  # check if the signal is a valid one before sending it
  /bin/kill -l | grep -qw "$signal" && pkill --signal "$signal" --exact "$proc_name"
}

restart_upstart () {
  local job_name="$1"

  # Make sure Upstart job exist and Upstart is tracking the process
  if [ -e "/etc/init/$job_name.conf" ]; then
    status $job_name | grep -qF running && restart $job_name > /dev/null
  fi
}

stop_start_upstart () {
  local job_name="$1"

  # Make sure Upstart job exist and Upstart is tracking the process
  if [ -e "/etc/init/$job_name.conf" ]; then
    status $job_name | grep -qF running && stop $job_name > /dev/null && start $job_name > /dev/null
  fi
}

if [ "$#" -eq 1 ]; then
  EXCLUDE_LIST="$1"
else
  EXCLUDE_LIST="''"
fi

$CHECK_DELETED_LIBS | grep -vE "$EXCLUDE_LIST" | while read proc_name; do
  case "$proc_name" in
    acpid)
      restart_upstart acpid
      ;;
    apache2)
      # does a graceful restart that won't restart the
      # master but will at least take care of the children
      service_action apache2 reload
      ;;
    atd)
      restart_upstart atd
      ;;
    cron)
      restart_upstart cron
      ;;
    dbus-daemon)
      restart_dbus
      ;;
    getty)
      send_signal HUP getty
      ;;
    irqbalance)
      restart_upstart irqbalance
      ;;
    libvirtd)
      stop_start_upstart libvirt-bin
      ;;
    mdadm)
      service_action mdadm restart
      ;;
    nginx)
      # Make sure the init script knows how to do in place
      # upgrades (replace the master bin)
      if [ -x "/etc/init.d/nginx" ] && /etc/init.d/nginx 2>&1 | grep -qF upgrade; then
        service_action nginx upgrade
      fi
      ;;
    nrpe)
      service_action nagios-nrpe-server restart
      ;;
    nsd)
      if [ -x "/etc/init.d/nsd" ]; then
        service_action nsd restart
      elif [ -x "/etc/init.d/nsd3" ]; then
        # nsd3's init script doesn't have "status"
        pgrep -x nsd > /dev/null && service nsd3 restart >/dev/null
      fi
      ;;
    ntpd)
      if [ -x /etc/init.d/openntpd ]; then
        service_action openntpd restart
      else
        service_action ntp restart
      fi
      ;;
    rsyslogd)
      restart_upstart rsyslog
      ;;
    smartd)
      service_action smartd restart
      ;;
    sshd)
      restart_upstart ssh
      ;;
    tlsmgr)
      service_action postfix reload
      ;;
    udevd|systemd-udevd)
      restart_upstart udev
      ;;
    unbound)
      service_action unbound restart
      ;;
    upstart-udev-br)
      restart_upstart upstart-udev-bridge
      ;;
    upstart-socket-)
      restart_upstart upstart-socket-bridge
      ;;
  esac
done
